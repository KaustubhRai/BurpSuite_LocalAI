name: Release on merge to main

on:
  push:
    branches: [ main ]

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  cut-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Read version (HEAD)
        id: ver_new
        run: |
          NEW_VER=$(mvn -q -DforceStdout -Dexpression=project.version help:evaluate)
          echo "value=$NEW_VER" >> $GITHUB_OUTPUT

      - name: Read version (previous commit)
        id: ver_old
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            OLD_POM=$(git show HEAD^:pom.xml || true)
            OLD_VER=$(printf "%s" "$OLD_POM" | sed -n '0,/<version>/s|.*<version>\(.*\)</version>.*|\1|p' | head -n1)
          else
            OLD_VER=""
          fi
          echo "value=$OLD_VER" >> $GITHUB_OUTPUT

      - name: Decide if release is needed
        id: gate
        run: |
          if [ "${{ steps.ver_new.outputs.value }}" = "${{ steps.ver_old.outputs.value }}" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build shaded jar
        if: steps.gate.outputs.changed == 'true'
        run: mvn -B -DskipTests clean package

      - name: Check if release already exists
        if: steps.gate.outputs.changed == 'true'
        id: check
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG="v${{ steps.ver_new.outputs.value }}"
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.gate.outputs.changed == 'true' && steps.check.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.ver_new.outputs.value }}
          name: Local LLM Assistant v${{ steps.ver_new.outputs.value }}
          target_commitish: ${{ github.sha }}
          generate_release_notes: true
          files: target/local-llm-assistant-${{ steps.ver_new.outputs.value }}.jar
